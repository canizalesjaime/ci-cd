# name: Node.js CI/CD

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     services:
#       postgres:
#         image: postgres:13
#         env:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: hello1234
#           POSTGRES_DB: postgres
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd="pg_isready"
#           --health-interval=10s
#           --health-timeout=5s
#           --health-retries=5

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v3

#     - name: Set up Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: '18'

#     - name: Install dependencies
#       run: npm install

#     - name: Wait for PostgreSQL to be ready
#       run: |
#         until pg_isready -h localhost -p 5432; do
#           echo "Waiting for PostgreSQL to be ready..."
#           sleep 2
#         done

#     - name: Run DB migrations (if any)
#       run: |
#         node migrate.js  # Adjust this to your migration script if needed

#     # - name: Run tests
#     #   env:
#     #     DATABASE_URL: postgres://postgres:hello1234@localhost:5432/postgres
#     #   run: npm test

#     - name: Build frontend
#       run: |
#         cd frontend
#         npm install
#         npm run build



name: Node.js CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t my-app ./.devcontainer

      - name: Run Docker container
        run: |
          docker run -d \
            --name my-app-container \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=hello1234 \
            -e POSTGRES_DB=postgres \
            -p 5432:5432 \
            my-app

      - name: Wait for PostgreSQL to be ready
        run: |
          until docker exec my-app-container pg_isready -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      - name: Install backend dependencies
        run: docker exec my-app-container npm install

      - name: Run DB migrations
        run: docker exec my-app-container node migrate.js

      - name: Install frontend dependencies
        run: docker exec my-app-container bash -c "cd frontend && npm install"

      # - name: Build frontend
      #   run: docker exec my-app-container bash -c "cd frontend && npm run build"
